{"version":3,"sources":["assets/images/logo.png","api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/header/index.jsx","pages/home/home.jsx","pages/category/category.jsx","pages/product/product.jsx","pages/role/role.jsx","pages/user/user.jsx","pages/chart/bar.jsx","pages/chart/line.jsx","pages/chart/pie.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ajax","url","data","arguments","length","undefined","type","Promise","res","rej","axios","get","params","post","then","resp","catch","err","message","error","reqLogin","username","password","memoryUtils","user","storageUtils","saveUser","store","set","getUser","removeUser","remove","Item","es_form","Login","handleSubmit","e","preventDefault","_this","props","form","validateFields","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","values","result","wrap","_context","prev","next","create_time","role","menus","__v","_id","sent","status","success","console","log","history","replace","msg","t0","stop","_x","_x2","apply","this","validatePwd","rule","value","callBack","test","react_default","createElement","react_router","to","getFieldDecorator","className","onSubmit","rules","required","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","validator","es_button","block","htmlType","Component","WrapLogin","create","menuList","title","key","children","SubMenu","LeftNav","getMenuNodes_map","map","item","menu","react_router_dom","getMenuNodes","reduce","pre","push","path","location","pathname","src","logo","alt","selectedKeys","defaultOpenKeys","mode","theme","withRouter","Header","Home","Category","Product","Role","User","Bar","Line","Pie","Footer","Sider","Content","Admin","layout","height","components_left_nav","header_Header","backgroundColor","component","textAlign","App","ReactDOM","render","App_App","document","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+YCGzB,SAASC,EAAKC,GAAuB,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,GAAGG,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,MAE1C,OAAO,IAAII,QAAQ,SAACC,EAAIC,IAEP,QAATH,EACUI,IAAMC,IAAIV,EAAK,CACrBW,OAAQV,IAGFQ,IAAMG,KAAKZ,EAAKC,IAEtBY,KAAK,SAAAC,GACTP,EAAIO,EAAKb,QACVc,MAAM,SAAAC,GAELR,EAAIQ,GACJC,EAAA,EAAQC,MAAMF,EAAIC,aCf9B,IAMaE,EAAW,SAACC,EAAUC,GAAX,OAAwBtB,EAAY,SAAU,CAACqB,WAAUC,YAAW,SCT7EC,EAAA,CACXC,KAAM,qBCIKC,EAAA,CAEXC,SAFW,SAEFF,GAELG,IAAMC,IALG,WAKWJ,IAGxBK,QAPW,WASP,OAAOF,IAAMhB,IAVJ,aAUqB,IAGlCmB,WAZW,WAcPH,IAAMI,OAfG,cCKXC,UAAOC,EAAA,EAAKD,MAEZE,6MAEJC,aAAe,SAAAC,GACbA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,eAAhB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAA+B,SAAAC,EAAO/B,EAAKgC,GAAZ,IAAA5B,EAAAC,EAAApB,EAAAgD,EAAA1B,EAAA,OAAAqB,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAExBrC,EAFwB,CAAAmC,EAAAE,KAAA,gBAGpBjC,EAAsB4B,EAAtB5B,SAAUC,EAAY2B,EAAZ3B,SAEXpB,EAAO,CACXqD,YAAa,cACbjC,SAAU,mCACVkC,KAAM,CAACC,MAAO,IACdA,MAAO,GACPpC,SAAU,QACVqC,IAAK,EACLC,IAAK,4BAZoBP,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAgBJlC,EAASC,EAAUC,GAhBf,OAiBL,KADd4B,EAhBmBE,EAAAQ,MAiBdC,QACT3C,EAAA,EAAQ4C,QAAQ,4BAEVtC,EAAO0B,EAAOhD,KAEpBqB,EAAYC,KAAOA,EAEnBC,EAAaC,SAASF,GAEtBuC,QAAQC,IAAIxC,GAIZc,EAAKC,MAAM0B,QAAQC,QAAQ,MAE3BhD,EAAA,EAAQC,MAAM+B,EAAOiB,KAhCEf,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,SAoCzBlC,EAAA,EAAQC,MAAM,2DAEdI,EAAYC,KAAOtB,EAEnBuB,EAAaC,SAASxB,GAEtBoC,EAAKC,MAAM0B,QAAQC,QAAQ,KA1CF,QAAAd,EAAAE,KAAA,iBA8C3BS,QAAQC,IAAI,4BA9Ce,yBAAAZ,EAAAiB,SAAArB,EAAA,kBAA/B,gBAAAsB,EAAAC,GAAA,OAAA7B,EAAA8B,MAAAC,KAAAtE,YAAA,OA4DFuE,YAAc,SAACC,EAAMC,EAAOC,GACrBD,EAEMA,EAAMxE,OAAO,EACtByE,EAAS,mCACAD,EAAMxE,OAAO,GACtByE,EAAS,oCACE,kBAAkBC,KAAKF,GAGlCC,IAFAA,EAAS,0DANTA,EAAS,qGAcX,IAAMrD,EAAOD,EAAYC,KAEzB,GAAIA,GAAQA,EAAKmC,IAEf,OAAOoB,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAUC,GAAG,MAItB,IACOC,EADMV,KAAKlC,MAAMC,KACjB2C,kBAEP,OAEEJ,EAAAjC,EAAAkC,cAAA,OAAKI,UAAU,cACbL,EAAAjC,EAAAkC,cAAA,OAAKI,UAAU,eACbL,EAAAjC,EAAAkC,cAAA,OAAKI,UAAU,aAAf,4BACAL,EAAAjC,EAAAkC,cAAA/C,EAAA,GAAMoD,SAAUZ,KAAKtC,aAAciD,UAAU,cAC3CL,EAAAjC,EAAAkC,cAAChD,EAAD,KAEImD,EAAkB,WAAY,CAC5BG,MAAO,CACL,CAAEC,UAAU,EAAMC,YAAY,EAAMtE,QAAS,kCAC7C,CAAEuE,IAAK,EAAGvE,QAAS,uBACnB,CAAEwE,IAAK,GAAIxE,QAAS,wBACpB,CAAEyE,QAAS,kBAAmBzE,QAAS,4DAL3CiE,CAQEJ,EAAAjC,EAAAkC,cAAAY,EAAA,GACEC,OAAQd,EAAAjC,EAAAkC,cAAAc,EAAA,GAAMxF,KAAK,OAAOyF,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,eAKpBlB,EAAAjC,EAAAkC,cAAChD,EAAD,KAEMmD,EAAkB,WAAY,CAC5BG,MAAO,CACL,CAAEY,UAAWzB,KAAKC,eAFtBS,CAKEJ,EAAAjC,EAAAkC,cAAAY,EAAA,GACEC,OAAQd,EAAAjC,EAAAkC,cAAAc,EAAA,GAAMxF,KAAK,OAAOyF,MAAO,CAAEC,MAAO,qBAC1C1F,KAAK,WACL2F,YAAY,eAKtBlB,EAAAjC,EAAAkC,cAAChD,EAAD,KACE+C,EAAAjC,EAAAkC,cAAAmB,EAAA,GAAQ7F,KAAK,UAAU8F,OAAK,EAACC,SAAS,SAASjB,UAAU,qBAAzD,2BAlIMkB,aAuKLC,EADGtE,EAAA,EAAKuE,QAALvE,CAAcC,qCC1HjBuE,EAxDE,CACb,CACIC,MAAO,eACPC,IAAK,QACLb,KAAM,QAEV,CACIY,MAAO,eACPC,IAAK,YACLb,KAAM,WACNc,SAAU,CACN,CACIF,MAAO,2BACPC,IAAK,YACLb,KAAM,QAEV,CACIY,MAAO,2BACPC,IAAK,WACLb,KAAM,UAIlB,CACIY,MAAO,2BACPC,IAAK,QACLb,KAAM,QAEV,CACIY,MAAO,2BACPC,IAAK,QACLb,KAAM,UAEV,CACIY,MAAO,2BACPC,IAAK,SACLb,KAAM,aACNc,SAAU,CACN,CACIF,MAAO,qBACPC,IAAK,aACLb,KAAM,aAEV,CACIY,MAAO,qBACPC,IAAK,cACLb,KAAM,cAEV,CACIY,MAAO,eACPC,IAAK,aACLb,KAAM,kCC1Cde,uBAEFC,6MAMFC,iBAAmB,SAACN,GAChB,OAAOA,EAASO,IAAI,SAAAC,GAEhB,OAAKA,EAAKL,SAWF7B,EAAAjC,EAAAkC,cAAC6B,EAAD,CACIF,IAAKM,EAAKN,IACVD,MACI3B,EAAAjC,EAAAkC,cAAA,YACID,EAAAjC,EAAAkC,cAAAc,EAAA,GAAMxF,KAAM2G,EAAKnB,OACjBf,EAAAjC,EAAAkC,cAAA,YAAOiC,EAAKP,SAKlBpE,EAAKyE,iBAAiBE,EAAKL,WAnBjC7B,EAAAjC,EAAAkC,cAAAkC,EAAA,EAAMlF,KAAN,CAAW2E,IAAKM,EAAKN,KACjB5B,EAAAjC,EAAAkC,cAACmC,EAAA,EAAD,CAAMjC,GAAI+B,EAAKN,KACX5B,EAAAjC,EAAAkC,cAAAc,EAAA,GAAMxF,KAAM2G,EAAKnB,OACjBf,EAAAjC,EAAAkC,cAAA,YAAOiC,EAAKP,cA2BpCU,aAAe,SAACX,GACZ,OAAOA,EAASY,OAAO,SAACC,EAAIL,GA2BxB,OAzBKA,EAAKL,SAUNU,EAAIC,KACCxC,EAAAjC,EAAAkC,cAAC6B,EAAD,CACGF,IAAKM,EAAKN,IACVD,MACI3B,EAAAjC,EAAAkC,cAAA,YACID,EAAAjC,EAAAkC,cAAAc,EAAA,GAAMxF,KAAM2G,EAAKnB,OACjBf,EAAAjC,EAAAkC,cAAA,YAAOiC,EAAKP,SAKlBpE,EAAK8E,aAAaH,EAAKL,YApBjCU,EAAIC,KACCxC,EAAAjC,EAAAkC,cAAAkC,EAAA,EAAMlF,KAAN,CAAW2E,IAAKM,EAAKN,KAClB5B,EAAAjC,EAAAkC,cAACmC,EAAA,EAAD,CAAMjC,GAAI+B,EAAKN,KACX5B,EAAAjC,EAAAkC,cAAAc,EAAA,GAAMxF,KAAM2G,EAAKnB,OACjBf,EAAAjC,EAAAkC,cAAA,YAAOiC,EAAKP,UAoBrBY,GACT,6EAMF,IAAME,EAAO/C,KAAKlC,MAAMkF,SAASC,SACjC,OACI3C,EAAAjC,EAAAkC,cAAA,OAAKI,UAAU,YACXL,EAAAjC,EAAAkC,cAACmC,EAAA,EAAD,CAAMjC,GAAG,IAAIE,UAAU,mBACnBL,EAAAjC,EAAAkC,cAAA,OAAK2C,IAAKC,IAAMC,IAAI,SACpB9C,EAAAjC,EAAAkC,cAAA,uCAEJD,EAAAjC,EAAAkC,cAAAkC,EAAA,GACIY,aAAc,CAACN,GACfO,gBAAiB,CAAC,IAClBC,KAAK,SACLC,MAAM,QAiCFxD,KAAK2C,aAAaX,YAxHpBH,aAkIP4B,cAAWpB,GCzILqB,2LAEb,OACIpD,EAAAjC,EAAAkC,cAAA,OAAKI,UAAU,UAAf,iBAHwBkB,cCFf8B,mLAGb,OACIrD,EAAAjC,EAAAkC,cAAA,mBAJsBsB,aCAb+B,mLAGb,OACItD,EAAAjC,EAAAkC,cAAA,mBAJ0BsB,aCAjBgC,mLAGb,OACIvD,EAAAjC,EAAAkC,cAAA,mBAJyBsB,aCAhBiC,mLAGb,OACIxD,EAAAjC,EAAAkC,cAAA,mBAJsBsB,aCAbkC,mLAGb,OACIzD,EAAAjC,EAAAkC,cAAA,mBAJsBsB,aCAbmC,mLAGb,OACI1D,EAAAjC,EAAAkC,cAAA,mBAJqBsB,aCAZoC,mLAGb,OACI3D,EAAAjC,EAAAkC,cAAA,mBAJsBsB,aCAbqC,mLAGb,OACI5D,EAAAjC,EAAAkC,cAAA,mBAJqBsB,aCgBzBsC,aAAQC,YAAOC,cAEFC,mLAEjB,IAAMvH,EAAOD,EAAYC,KAEzB,OAAKA,GAASA,EAAKmC,IAKjBoB,EAAAjC,EAAAkC,cAAAgE,EAAA,GAAQjD,MAAO,CAACkD,OAAQ,SACtBlE,EAAAjC,EAAAkC,cAAC6D,EAAD,KACE9D,EAAAjC,EAAAkC,cAACkE,EAAD,OAEFnE,EAAAjC,EAAAkC,cAAAgE,EAAA,OACEjE,EAAAjC,EAAAkC,cAACmE,EAAD,eACApE,EAAAjC,EAAAkC,cAAC8D,EAAD,CAAS/C,MAAO,CAACqD,gBAAiB,SAChCrE,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,KACEF,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,QAAQ6B,UAAWjB,IAC/BrD,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,YAAY6B,UAAWhB,IACnCtD,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,WAAW6B,UAAWf,IAClCvD,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,QAAQ6B,UAAWd,IAC/BxD,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,QAAQ6B,UAAWb,IAC/BzD,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,aAAa6B,UAAWZ,IACpC1D,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,cAAc6B,UAAWX,IACrC3D,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,aAAa6B,UAAWV,IACpC5D,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAUC,GAAG,YAGjBH,EAAAjC,EAAAkC,cAAC4D,EAAD,CAAQ7C,MAAO,CAACuD,UAAW,WAA3B,wCAtBGvE,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAUC,GAAG,kBANSoB,aCVdiD,oLAEjB,OACExE,EAAAjC,EAAAkC,cAACmC,EAAA,EAAD,KAEEpC,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,KACEF,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,SAAS6B,UAAWnH,IAChC6C,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAOuC,KAAK,IAAI6B,UAAWN,IAC3BhE,EAAAjC,EAAAkC,cAACC,EAAA,EAAD,CAAUC,GAAG,eARUoB,aCF3B9E,GAAOC,EAAaI,UAC1BN,EAAYC,KAAOA,GAGnBgI,IAASC,OAAO1E,EAAAjC,EAAAkC,cAAC0E,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.2a2787a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0ce0069e.png\";","import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nexport default function ajax(url,data={},type='GET'){\r\n\r\n    return new Promise((res,rej)=>{\r\n        let promise\r\n        if (type === 'GET') {\r\n            promise = axios.get(url, {\r\n                params: data\r\n            })\r\n        } else {\r\n            promise = axios.post(url, data)\r\n        }\r\n        promise.then(resp=>{\r\n            res(resp.data)\r\n        }).catch(err=>{\r\n            // 异常传出，可以在各自的方法上做为伪数据 - 这块方便演示查看\r\n            rej(err)\r\n            message.error(err.message)\r\n        })\r\n        \r\n    })\r\n    \r\n}","import ajax from \"./ajax\";\r\n\r\n// 每个接口返回都是promise\r\n\r\nconst BASE = ''\r\n\r\n// 登录\r\n// export function reqLogin(username, password){\r\n//     return ajax('/login', {username, password})\r\n// }\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n// 添加用户\r\nexport const reqAddUser = (user) => ajax(BASE + '/manage/user/add', user, 'POST')","\r\nexport default {\r\n    user: {} // 保存当前登录的用户信息\r\n}","/*\r\n    localStorage 缓存方法\r\n*/\r\nimport store from \"store\";\r\n\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n    // 保存user\r\n    saveUser(user) {\r\n        // localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n        store.set(USER_KEY, user);\r\n    },\r\n    // 获取user\r\n    getUser() {\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}');\r\n        return store.get(USER_KEY) || {};\r\n    },\r\n    // 移除user\r\n    removeUser() {\r\n        // localStorage.removeItem(USER_KEY);\r\n        store.remove(USER_KEY);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Form, Icon, Input, Button, message } from 'antd';\r\n\r\nimport {reqLogin} from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\n\r\nimport './login.less'\r\n\r\nconst Item = Form.Item // 不能写到import前\r\n\r\nclass Login extends Component {\r\n  // 提交\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 校验成功\r\n      if (!err) {\r\n        const {username, password} = values\r\n\r\n        const data = {\r\n          create_time: 1626874402124,\r\n          password: \"21232f297a57a5a743894a0e4a801fc3\",\r\n          role: {menus: []},\r\n          menus: [],\r\n          username: \"admin\",\r\n          __v: 0,\r\n          _id: \"60f822221a00151314d2626a\"\r\n        }\r\n\r\n        try {\r\n          const result = await reqLogin(username, password)\r\n          if (result.status===0) {\r\n            message.success('登陆成功')\r\n\r\n            const user = result.data\r\n            // 存到内存里\r\n            memoryUtils.user = user\r\n            // 存到本地\r\n            storageUtils.saveUser(user)\r\n\r\n            console.log(user)\r\n\r\n            // 不需要回退到登录\r\n            // this.props.history.push('/')\r\n            this.props.history.replace('/')\r\n          } else {\r\n            message.error(result.msg)\r\n          }\r\n        } catch (e) {\r\n          // 获取伪数据\r\n          message.error('接口异常-使用伪数据')\r\n          // 存到内存里\r\n          memoryUtils.user = data\r\n          // 存到本地\r\n          storageUtils.saveUser(data)\r\n          // 跳转\r\n          this.props.history.replace('/')\r\n        }\r\n\r\n      } else {\r\n        console.log('校验失败')\r\n      }\r\n    });\r\n    // // form对象\r\n    // const form = this.props.form\r\n    // // 获取表单数据\r\n    // const values = form.getFieldsValue()\r\n    // const val = form.getFieldValue()\r\n    // console.log(form)\r\n    // console.log(values)\r\n    // console.log(val)\r\n  };\r\n\r\n  // 校验,其他写法\r\n  validatePwd = (rule, value, callBack)=> {\r\n    if (!value) {\r\n      callBack('密码必输')\r\n    } else if (value.length<4) {\r\n      callBack('密码大于4位')\r\n    } else if (value.length>12) {\r\n      callBack('密码小于12位')\r\n    } else if (!(/^[a-zA-Z0-9_]+$/.test(value))) {\r\n      callBack('必须数字英文下划线')\r\n    } else{\r\n      callBack()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // 如果用户登录，跳转到首页\r\n    const user = memoryUtils.user\r\n    // 当前没有用户\r\n    if (user && user._id) {\r\n      // 自动跳转登录\r\n      return <Redirect to='/'/>\r\n    }\r\n\r\n    // 得到具有强大功能的from对象\r\n    const form = this.props.form\r\n    const {getFieldDecorator} = form\r\n\r\n    return (\r\n      // 主体\r\n      <div className=\"login-main\">\r\n        <div className=\"login-model\">\r\n          <div className=\"login-tit\">用户登录</div>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                getFieldDecorator('username', {\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必输' },\r\n                    { min: 4, message: '最小4位' },\r\n                    { max: 12, message: '最大12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '必须数字英文下划线' },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"Username\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item>\r\n              {\r\n                  getFieldDecorator('password', {\r\n                    rules: [\r\n                      { validator: this.validatePwd }\r\n                    ],\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                  )\r\n                }\r\n            </Item>\r\n            <Item>\r\n              <Button type=\"primary\" block htmlType=\"submit\" className=\"login-form-button\">\r\n                登录\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n  1. 高阶函数\r\n    1). 一类特定的函数\r\n      a. 接收函数类型的参数\r\n      b. 返回值是函数\r\n    2). 常见\r\n      a. 定时器：setTimeout()/setInterval()\r\n      b. Promise: Promise(()={}) then(value=>{},reason=>{})\r\n      c. 数组遍历相关的方法： forEach()/filter()/map()/reduce()/find()/findIndex()\r\n      d. 函数对象的bind()\r\n      e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态，更加具有扩展性\r\n  2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件（被包装组件），返回一个新的组件（包装组建），包装组建会向被包装组件传入特定属性\r\n    3). 作用：扩展组件的功能\r\n    4). 高阶组件也是一个高阶函数：接受一个组件函数，返回一个新的组件函数\r\n      \r\n*/\r\n\r\n/*\r\n  登录的路由组件\r\n  包装Form组件生成一个新的组件：Form（Login）\r\n  新组件会向Form组件传递一个强大的对象属性：form\r\n*/\r\nconst WrapLogin = Form.create()(Login)\r\nexport default WrapLogin\r\n\r\n// 前台表单验证\r\n// 手机表单输入数据","const menuList = [\r\n    {\r\n        title: '首页', // 菜单标题名称\r\n        key: '/home', // 对应的 path\r\n        icon: 'home', // 图标名称\r\n    },\r\n    {\r\n        title: '商品',\r\n        key: '/products',\r\n        icon: 'appstore',\r\n        children: [ // 子菜单列表\r\n            {\r\n                title: '品类管理',\r\n                key: '/category',\r\n                icon: 'bars'\r\n            },\r\n            {\r\n                title: '商品管理',\r\n                key: '/product',\r\n                icon: 'tool'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '用户管理',\r\n        key: '/user',\r\n        icon: 'user'\r\n    },\r\n    {\r\n        title: '角色管理',\r\n        key: '/role',\r\n        icon: 'safety',\r\n    },\r\n    {\r\n        title: '图形图表',\r\n        key: '/chart',\r\n        icon: 'area-chart',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/chart/bar',\r\n                icon: 'bar-chart'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/chart/line',\r\n                icon: 'line-chart'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/chart/pie',\r\n                icon: 'pie-chart'\r\n            },\r\n        ]\r\n    },\r\n]\r\nexport default menuList","import React, {Component} from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport menuList from '../../config/menuConfig';\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport './index.less'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component{\r\n\r\n    /*\r\n        根据menu的数据数组生成对应的标签数组 \r\n        map + 递归调用\r\n    */\r\n    getMenuNodes_map = (menuList) => {\r\n        return menuList.map(item=>{\r\n            // 单个菜单\r\n            if (!item.children) {\r\n                return (\r\n                    <Menu.Item key={item.key}>\r\n                        <Link to={item.key}>\r\n                            <Icon type={item.icon} />\r\n                            <span>{item.title}</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                )\r\n            } else { // 含有子菜单\r\n                return (\r\n                    <SubMenu\r\n                        key={item.key}\r\n                        title={\r\n                            <span>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        {/* 递归 */}\r\n                        { this.getMenuNodes_map(item.children) }\r\n                    </SubMenu>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    /*\r\n        根据menu的数据数组生成对应的标签数组 \r\n        reduce + 递归调用\r\n    */\r\n    getMenuNodes = (menuList) => {\r\n        return menuList.reduce((pre,item)=>{\r\n            // pre添加<menu.Item>\r\n            if (!item.children) {\r\n                pre.push(\r\n                    (<Menu.Item key={item.key}>\r\n                        <Link to={item.key}>\r\n                            <Icon type={item.icon} />\r\n                            <span>{item.title}</span>\r\n                        </Link>\r\n                    </Menu.Item>)\r\n                )\r\n            } else { // pre添加<SubMenu>\r\n                pre.push(\r\n                    (<SubMenu\r\n                        key={item.key}\r\n                        title={\r\n                            <span>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        {/* 递归 */}\r\n                        { this.getMenuNodes(item.children) }\r\n                    </SubMenu>)\r\n                )\r\n            }\r\n            return pre;\r\n        },[])\r\n    }\r\n\r\n\r\n    render() {\r\n        // 得到当前路径\r\n        const path = this.props.location.pathname\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <Link to='/' className=\"left-nav-header\">\r\n                    <img src={logo} alt='logo'/>\r\n                    <h1>管理系统</h1>\r\n                </Link>\r\n                <Menu\r\n                    selectedKeys={[path]}\r\n                    defaultOpenKeys={['']}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                >\r\n                    {/* <Menu.Item key=\"1\">\r\n                        <Link to='/home'>\r\n                            <Icon type=\"pie-chart\" />\r\n                            <span>首页</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"sub1\"\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"mail\" />\r\n                                <span>商品</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item key=\"2\">\r\n                            <Link to='/category'>\r\n                                <Icon type=\"mail\" />\r\n                                <span>品类管理</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\">\r\n                            <Link to='/product'>\r\n                                <Icon type=\"mail\" />\r\n                                <span>商品管理</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu> */}\r\n                    {/* 获取菜单 */}\r\n                    {\r\n                        this.getMenuNodes(menuList)\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// withRouter,高阶组件：\r\n// 包装非路由组件，返回一个新的组件\r\n// 心得组件向非路由组件传递三个属性：history、location、match\r\nexport default withRouter(LeftNav)","import React, {Component} from 'react'\r\n\r\nimport './index.less'\r\n\r\nexport default class Header extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"header\">header</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Home extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Category extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Product extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Role extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class User extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Bar extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Line extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Pie extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { Layout } from 'antd';\r\n\r\nimport memoryUtils from '../../utils/memoryUtils';\r\n\r\nimport LeftNav from '../../components/left-nav';\r\nimport Header from '../../components/header';\r\n\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../chart/bar'\r\nimport Line from '../chart/line'\r\nimport Pie from '../chart/pie'\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\nexport default class Admin extends Component {\r\n  render() {\r\n    const user = memoryUtils.user\r\n    // 当前没有用户\r\n    if (!user || !user._id) {\r\n      // 自动跳转登录\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <Layout style={{height: '100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{backgroundColor: '#fff'}}>\r\n            <Switch>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path='/user' component={User}/>\r\n              <Route path='/chart/bar' component={Bar}/>\r\n              <Route path='/chart/line' component={Line}/>\r\n              <Route path='/chart/pie' component={Pie}/>\r\n              <Redirect to='/home'/>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign: 'center'}}>2021-07-25注册使用</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport {Redirect, BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport Login from './pages/login/login'\nimport Admin from './pages/admin/admin'\n\n/*\n  应用的根组件\n*/\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        {/* 只匹配其中一个 */}\n        <Switch>\n          <Route path='/login' component={Login}></Route>\n          <Route path='/' component={Admin}></Route>\n          <Redirect to='/'/>\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport storageUtils from './utils/storageUtils'\nimport memoryUtils from './utils/memoryUtils'\n\n// 读取local保存的user,保存到内存里\nconst user = storageUtils.getUser()\nmemoryUtils.user = user\n\n// 将App组件标签 渲染到index页面的div上\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}