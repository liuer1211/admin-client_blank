{"version":3,"sources":["assets/images/logo.png","api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","components/link-button/index.jsx","pages/category/category.jsx","pages/product/product.jsx","pages/role/role.jsx","pages/user/user.jsx","pages/chart/bar.jsx","pages/chart/line.jsx","pages/chart/pie.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ajax","url","data","arguments","length","undefined","type","Promise","res","rej","axios","get","params","post","then","resp","catch","err","message","error","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqWeather","city","dayPictureUrl","weather","memoryUtils","user","storageUtils","saveUser","store","set","getUser","removeUser","remove","Item","es_form","Login","handleSubmit","e","preventDefault","_this","props","form","validateFields","Object","asyncToGenerator","regenerator_default","a","mark","_callee","values","result","wrap","_context","prev","next","create_time","role","menus","__v","_id","sent","status","success","console","log","history","replace","msg","t0","stop","_x","_x2","apply","this","validatePwd","rule","value","callBack","test","react_default","createElement","react_router","to","getFieldDecorator","className","onSubmit","rules","required","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","validator","es_button","block","htmlType","Component","WrapLogin","create","menuList","title","key","children","SubMenu","LeftNav","getMenuNodes_map","map","item","menu","react_router_dom","getMenuNodes","path","location","pathname","reduce","pre","find","citem","openKey","push","menuNodes","src","logo","alt","selectedKeys","defaultOpenKeys","mode","theme","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","state","currentTime","now","getTime","interId","setInterval","setState","getWeather","_ref2","getTitle","forEach","it","outLogin","modal","confirm","onOk","clearInterval","_this$state","onClick","Home","Option","es_select","AddForm","setForm","_this$props","categorys","add_form_Item","initialValue","c","name","React","add_form","UpdateForm","update_form_Item","update_form","LinkButton","assign","Category","loading","subCategorys","parentName","showStatus","_parentId","_categorys","showCate","getInitColums","columns","dataIndex","width","render","category","cateUpdate","getSubCate","cateAdd","cateUpdateDate","handleCancel","resetFields","handleOk1","_callee2","_context2","_x3","handleOk","_ref3","_callee3","_context3","_x4","_x5","_this2","extra","card","table","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","Product","Role","User","Bar","Line","Pie","Footer","Sider","Content","Admin","layout","height","components_left_nav","components_header","margin","backgroundColor","component","textAlign","App","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c25f58a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0ce0069e.png\";","import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nexport default function ajax(url,data={},type='GET'){\r\n\r\n    return new Promise((res,rej)=>{\r\n        let promise\r\n        if (type === 'GET') {\r\n            promise = axios.get(url, {\r\n                params: data\r\n            })\r\n        } else {\r\n            promise = axios.post(url, data)\r\n        }\r\n        promise.then(resp=>{\r\n            res(resp.data)\r\n        }).catch(err=>{\r\n            // 异常传出，可以在各自的方法上做为伪数据 - 这块方便演示查看\r\n            rej(err)\r\n            message.error(err.message)\r\n        })\r\n        \r\n    })\r\n    \r\n}","import ajax from \"./ajax\";\r\n// import jsonp from 'jsonp'\r\n// import { message } from \"antd\";\r\n\r\n// 每个接口返回都是promise\r\n\r\nconst BASE = ''\r\n\r\n// 登录\r\n// export function reqLogin(username, password){\r\n//     return ajax('/login', {username, password})\r\n// }\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n// 添加用户\r\nexport const reqAddUser = (user) => ajax(BASE + '/manage/user/add', user, 'POST')\r\n\r\n// 商品分类 一级、二级\r\nexport const reqCategorys= (parentId) => ajax(BASE + '/manage/category/list', {parentId});\r\n// 添加商品分类\r\nexport const reqAddCategory= (categoryName, parentId) => ajax(BASE + '/manage/category/add', {categoryName, parentId}, 'post');\r\n// 修改商品分类\r\nexport const reqUpdateCategory= ({categoryName, categoryId}) => ajax(BASE + '/manage/category/update', {categoryName, categoryId}, 'post');\r\n\r\n\r\n\r\n\r\n\r\n\r\n// jsonp 请求的接口请求函数\r\n// 天气信息\r\n\r\nexport const reqWeather = (city) => {\r\n    return {dayPictureUrl: 'http://api.map.baidu.com/images/weather/day/qing.png', weather: '晴'};\r\n    // return new Promise((resolve, reject)=>{\r\n    //     const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=6c0621701e4f8f0327b48bff7d67291e`;\r\n    //     jsonp(url, {}, (err,data)=>{\r\n    //         if(!err && data.status === 'success') {\r\n    //             const {dayPictureUrl, weather} = data.results[0].weather_data[0];\r\n    //             resolve({dayPictureUrl, weather});\r\n    //         } else {\r\n    //             // 异常传出，可以在各自的方法上做为伪数据 - 这块方便演示查看\r\n    //             reject(err);\r\n    //             message.error(err.message);\r\n    //         }\r\n    //     })\r\n    // })\r\n}","\r\nexport default {\r\n    user: {} // 保存当前登录的用户信息\r\n}","/*\r\n    localStorage 缓存方法\r\n*/\r\nimport store from \"store\";\r\n\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n    // 保存user\r\n    saveUser(user) {\r\n        // localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n        store.set(USER_KEY, user);\r\n    },\r\n    // 获取user\r\n    getUser() {\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}');\r\n        return store.get(USER_KEY) || {};\r\n    },\r\n    // 移除user\r\n    removeUser() {\r\n        // localStorage.removeItem(USER_KEY);\r\n        store.remove(USER_KEY);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Form, Icon, Input, Button, message } from 'antd';\r\n\r\nimport {reqLogin} from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\n\r\nimport './login.less'\r\n\r\nconst Item = Form.Item // 不能写到import前\r\n\r\nclass Login extends Component {\r\n  // 提交\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 校验成功\r\n      if (!err) {\r\n        const {username, password} = values\r\n\r\n        const data = {\r\n          create_time: 1626874402124,\r\n          password: \"21232f297a57a5a743894a0e4a801fc3\",\r\n          role: {menus: []},\r\n          menus: [],\r\n          username: \"admin\",\r\n          __v: 0,\r\n          _id: \"60f822221a00151314d2626a\"\r\n        }\r\n\r\n        try {\r\n          const result = await reqLogin(username, password)\r\n          if (result.status===0) {\r\n            message.success('登陆成功')\r\n\r\n            const user = result.data\r\n            // 存到内存里\r\n            memoryUtils.user = user\r\n            // 存到本地\r\n            storageUtils.saveUser(user)\r\n\r\n            console.log(user)\r\n\r\n            // 不需要回退到登录\r\n            // this.props.history.push('/')\r\n            this.props.history.replace('/')\r\n          } else {\r\n            message.error(result.msg)\r\n          }\r\n        } catch (e) {\r\n          // 获取伪数据\r\n          message.error('接口异常-使用伪数据')\r\n          // 存到内存里\r\n          memoryUtils.user = data\r\n          // 存到本地\r\n          storageUtils.saveUser(data)\r\n          // 跳转\r\n          this.props.history.replace('/')\r\n        }\r\n\r\n      } else {\r\n        console.log('校验失败')\r\n      }\r\n    });\r\n    // // form对象\r\n    // const form = this.props.form\r\n    // // 获取表单数据\r\n    // const values = form.getFieldsValue()\r\n    // const val = form.getFieldValue()\r\n    // console.log(form)\r\n    // console.log(values)\r\n    // console.log(val)\r\n  };\r\n\r\n  // 校验,其他写法\r\n  validatePwd = (rule, value, callBack)=> {\r\n    if (!value) {\r\n      callBack('密码必输')\r\n    } else if (value.length<4) {\r\n      callBack('密码大于4位')\r\n    } else if (value.length>12) {\r\n      callBack('密码小于12位')\r\n    } else if (!(/^[a-zA-Z0-9_]+$/.test(value))) {\r\n      callBack('必须数字英文下划线')\r\n    } else{\r\n      callBack()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // 如果用户登录，跳转到首页\r\n    const user = memoryUtils.user\r\n    // 当前没有用户\r\n    if (user && user._id) {\r\n      // 自动跳转登录\r\n      return <Redirect to='/'/>\r\n    }\r\n\r\n    // 得到具有强大功能的from对象\r\n    const form = this.props.form\r\n    const {getFieldDecorator} = form\r\n\r\n    return (\r\n      // 主体\r\n      <div className=\"login-main\">\r\n        <div className=\"login-model\">\r\n          <div className=\"login-tit\">用户登录</div>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                getFieldDecorator('username', {\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必输' },\r\n                    { min: 4, message: '最小4位' },\r\n                    { max: 12, message: '最大12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '必须数字英文下划线' },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"Username\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item>\r\n              {\r\n                  getFieldDecorator('password', {\r\n                    rules: [\r\n                      { validator: this.validatePwd }\r\n                    ],\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                  )\r\n                }\r\n            </Item>\r\n            <Item>\r\n              <Button type=\"primary\" block htmlType=\"submit\" className=\"login-form-button\">\r\n                登录\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n  1. 高阶函数\r\n    1). 一类特定的函数\r\n      a. 接收函数类型的参数\r\n      b. 返回值是函数\r\n    2). 常见\r\n      a. 定时器：setTimeout()/setInterval()\r\n      b. Promise: Promise(()={}) then(value=>{},reason=>{})\r\n      c. 数组遍历相关的方法： forEach()/filter()/map()/reduce()/find()/findIndex()\r\n      d. 函数对象的bind()\r\n      e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态，更加具有扩展性\r\n  2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件（被包装组件），返回一个新的组件（包装组建），包装组建会向被包装组件传入特定属性\r\n    3). 作用：扩展组件的功能\r\n    4). 高阶组件也是一个高阶函数：接受一个组件函数，返回一个新的组件函数\r\n      \r\n*/\r\n\r\n/*\r\n  登录的路由组件\r\n  包装Form组件生成一个新的组件：Form（Login）\r\n  新组件会向Form组件传递一个强大的对象属性：form\r\n*/\r\nconst WrapLogin = Form.create()(Login)\r\nexport default WrapLogin\r\n\r\n// 前台表单验证\r\n// 手机表单输入数据","const menuList = [\r\n    {\r\n        title: '首页', // 菜单标题名称\r\n        key: '/home', // 对应的 path\r\n        icon: 'home', // 图标名称\r\n    },\r\n    {\r\n        title: '商品',\r\n        key: '/products',\r\n        icon: 'appstore',\r\n        children: [ // 子菜单列表\r\n            {\r\n                title: '品类管理',\r\n                key: '/category',\r\n                icon: 'bars'\r\n            },\r\n            {\r\n                title: '商品管理',\r\n                key: '/product',\r\n                icon: 'tool'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '用户管理',\r\n        key: '/user',\r\n        icon: 'user'\r\n    },\r\n    {\r\n        title: '角色管理',\r\n        key: '/role',\r\n        icon: 'safety',\r\n    },\r\n    {\r\n        title: '图形图表',\r\n        key: '/chart',\r\n        icon: 'area-chart',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/chart/bar',\r\n                icon: 'bar-chart'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/chart/line',\r\n                icon: 'line-chart'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/chart/pie',\r\n                icon: 'pie-chart'\r\n            },\r\n        ]\r\n    },\r\n]\r\nexport default menuList","import React, {Component} from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport menuList from '../../config/menuConfig';\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport './index.less'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component{\r\n\r\n    /*\r\n        根据menu的数据数组生成对应的标签数组 \r\n        map + 递归调用\r\n    */\r\n    getMenuNodes_map = (menuList) => {\r\n        return menuList.map(item=>{\r\n            // 单个菜单\r\n            if (!item.children) {\r\n                return (\r\n                    <Menu.Item key={item.key}>\r\n                        <Link to={item.key}>\r\n                            <Icon type={item.icon} />\r\n                            <span>{item.title}</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                )\r\n            } else { // 含有子菜单\r\n                return (\r\n                    <SubMenu\r\n                        key={item.key}\r\n                        title={\r\n                            <span>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        {/* 递归 */}\r\n                        { this.getMenuNodes_map(item.children) }\r\n                    </SubMenu>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    /*\r\n        根据menu的数据数组生成对应的标签数组 \r\n        reduce + 递归调用\r\n    */\r\n    getMenuNodes = (menuList) => {\r\n        // 得到当前路径\r\n        const path = this.props.location.pathname\r\n\r\n        return menuList.reduce((pre,item)=>{\r\n            // pre添加<menu.Item>\r\n            if (!item.children) {\r\n                pre.push(\r\n                    (<Menu.Item key={item.key}>\r\n                        <Link to={item.key}>\r\n                            <Icon type={item.icon} />\r\n                            <span>{item.title}</span>\r\n                        </Link>\r\n                    </Menu.Item>)\r\n                )\r\n            } else { // pre添加<SubMenu>\r\n\r\n                // 当前子菜单选中，并是打开状态，刷新页面，会被闭合--解决这个bug\r\n                // 查找一个与当前请求路径匹配的子item\r\n                const citem = item.children.find(citem=>\r\n                    citem.key === path\r\n                )\r\n                // 如果存在，说明当前item的字列表需要打开\r\n                if(citem) {\r\n                    this.openKey = item.key;\r\n                }\r\n                \r\n                pre.push(\r\n                    (<SubMenu\r\n                        key={item.key}\r\n                        title={\r\n                            <span>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        {/* 递归 */}\r\n                        { this.getMenuNodes(item.children) }\r\n                    </SubMenu>)\r\n                )\r\n            }\r\n            return pre;\r\n        },[])\r\n    }\r\n\r\n    /*\r\n        在第一次render()之前执行一次\r\n        为第一个render()准备数据（必须同步的）\r\n    */\r\n    componentWillMount() {\r\n        // console.log(this)\r\n        // 得到节点,先进行读节点---------\r\n        this.menuNodes = this.getMenuNodes(menuList)\r\n    }\r\n\r\n    render() {\r\n\r\n        // 得到当前路径\r\n        const path = this.props.location.pathname\r\n\r\n        // 得到需要打开菜单项的key，再获得openKey-------\r\n        const openKey = this.openKey\r\n\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <Link to='/' className=\"left-nav-header\">\r\n                    <img src={logo} alt='logo'/>\r\n                    <h1>管理系统</h1>\r\n                </Link>\r\n                <Menu\r\n                    selectedKeys={[path]}\r\n                    defaultOpenKeys={[openKey]}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                >\r\n                    {/* <Menu.Item key=\"1\">\r\n                        <Link to='/home'>\r\n                            <Icon type=\"pie-chart\" />\r\n                            <span>首页</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"sub1\"\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"mail\" />\r\n                                <span>商品</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item key=\"2\">\r\n                            <Link to='/category'>\r\n                                <Icon type=\"mail\" />\r\n                                <span>品类管理</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\">\r\n                            <Link to='/product'>\r\n                                <Icon type=\"mail\" />\r\n                                <span>商品管理</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu> */}\r\n                    {/* 获取菜单 */}\r\n                    {\r\n                        this.menuNodes\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// withRouter,高阶组件：\r\n// 包装非路由组件，返回一个新的组件\r\n// 心得组件向非路由组件传递三个属性：history、location、match\r\nexport default withRouter(LeftNav)","// 格式化日期\r\nexport function formateDate(time) {\r\n    if (!time) return '';\r\n    let date = new Date(time);\r\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n        + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\r\n}","import React, {Component} from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal } from 'antd';\r\n\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport menuList from \"../../config/menuConfig\"\r\n\r\nimport {reqWeather} from \"../../api/index\"\r\n\r\nimport './index.less'\r\n\r\nclass Header extends Component{\r\n\r\n    state = {\r\n        currentTime: formateDate(Date.now()),\r\n        dayPictureUrl: '',\r\n        weather: '',\r\n    }\r\n\r\n    // 更新时间\r\n    getTime = () => {\r\n        this.interId = setInterval(()=>{\r\n            const currentTime = formateDate(Date.now());\r\n            this.setState({currentTime})\r\n        },1000)\r\n    }\r\n\r\n    // 更新天气\r\n    getWeather= async () => {\r\n        // 获得接口数据\r\n       const {dayPictureUrl, weather} = await reqWeather('上海')\r\n       this.setState({dayPictureUrl, weather})\r\n    }\r\n\r\n    // 获得title\r\n    getTitle = ()=> {\r\n        const path = this.props.location.pathname\r\n        let title = ''\r\n        menuList.forEach(item=>{\r\n            if (item.key === path) {\r\n                title = item.title;\r\n            } else if (item.children) {\r\n                const it = item.children.find(it => it.key===path)\r\n                if (it) {\r\n                    title = it.title;\r\n                }\r\n            }\r\n        })\r\n        return title;\r\n    }\r\n\r\n    outLogin= () => {\r\n        Modal.confirm({\r\n            title: '确定退出吗？',\r\n            onOk: ()=>{\r\n                storageUtils.removeUser()\r\n                memoryUtils.user={}\r\n                this.props.history.replace('/login')\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n    // 第一次render（）后执行一次\r\n    // 一般再次执行异步操作：发Ajax请求、启动定时器\r\n    componentDidMount() {\r\n        // 获得时间\r\n        this.getTime();\r\n        // 获得天气\r\n        this.getWeather();\r\n    }\r\n\r\n    // 当前组件卸载前执行\r\n    componentWillUnmount() {\r\n        // 清除定时器\r\n        clearInterval(this.interId)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {currentTime, dayPictureUrl, weather} =this.state\r\n\r\n        const user = memoryUtils.user.username\r\n\r\n        const title = this.getTitle(); // 要在这里获取，切换时会执行这里，不执行其他钩子函数，不能写在state里\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎，{user}</span>\r\n                    <span onClick={this.outLogin}>退出</span>\r\n                </div>\r\n                <div className=\"header-bot\">\r\n                    <div className=\"header-bot-l\">{title}</div>\r\n                    <div className=\"header-bot-r\">\r\n                        <span className=\"header-bot-r-sp1\">{currentTime}</span>\r\n                        <img src={dayPictureUrl} alt=\"天气\" />\r\n                        <span className=\"header-bot-r-sp2\">{weather}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { Component } from 'react';\r\nimport './home.less'\r\n\r\nexport default class Home extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className='home-main'>\r\n                欢迎使用\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Form,\r\n    Select,\r\n    Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\nclass AddForm extends React.Component {\r\n\r\n    static propTypes = {\r\n        categorys : PropTypes.array.isRequired, // 一级分类列表\r\n        parentId: PropTypes.string.isRequired, // 父分类id\r\n        setForm: PropTypes.func.isRequired //用来传递form对象的函数\r\n    }\r\n\r\n    componentWillMount() {\r\n        // 将form对象通过setForm()传递到父组件\r\n        this.props.setForm(this.props.form)\r\n        // console.log('---')\r\n    }\r\n\r\n    render() {\r\n\r\n        const { getFieldDecorator } = this.props.form\r\n        const { categorys,parentId } = this.props\r\n\r\n        return (\r\n            <Form>\r\n                所属分类\r\n                <Item>\r\n                    {\r\n                        getFieldDecorator('parentId', {\r\n                            initialValue: parentId,\r\n                        })(\r\n                            <Select>\r\n                                <Option value='0'>一级分类</Option>\r\n                                {/* \r\n                                <Option value='1'>家电</Option>\r\n                                <Option value='2'>手机</Option> */}\r\n                                {\r\n                                    categorys.map( c =>(\r\n                                        <Option key={c._id} value={c._id}>{c.name}</Option>\r\n                                    ) )\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Item>\r\n                分类名称\r\n                <Item>\r\n                    {\r\n                        getFieldDecorator('categoryName', {\r\n                            initialValue: '',\r\n                            rules: [\r\n                                {\r\n                                    required: true, message: '分类必输'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input placeholder='输入商品分类' />\r\n                        )\r\n                    }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Form,\r\n    Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\nclass UpdateForm extends React.Component {\r\n\r\n    // 接收参数\r\n    static propTypes = {\r\n        categoryName: PropTypes.string.isRequired,\r\n        setForm: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentWillMount() {\r\n        // 将form对象通过setForm()传递到父组件\r\n        this.props.setForm(this.props.form)\r\n        // console.log('---')\r\n    }\r\n\r\n    render() {\r\n\r\n        // 读取参数\r\n        const {categoryName} = this.props\r\n\r\n        const { getFieldDecorator } = this.props.form\r\n\r\n        return (\r\n            <Form>\r\n                分类名称\r\n                <Item>\r\n                    {\r\n                        getFieldDecorator('categoryName', {\r\n                            initialValue: categoryName,\r\n                            rules: [\r\n                                {\r\n                                    required: true, message: '分类必输'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input placeholder='输入商品分类' />\r\n                        )\r\n                    }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)","import React from 'react'\r\n\r\nimport './index.less'\r\n\r\nexport default function LinkButton(props) {\r\n    // console.log(props)\r\n    return <button {...props} className=\"link-button\"></button>\r\n}","import React, { Component } from 'react';\r\n\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\nimport { Card, Button, Icon, Table, message, Modal } from 'antd';\r\n\r\nimport LinkButton from '../../components/link-button';\r\nimport { reqCategorys, reqUpdateCategory, reqAddCategory } from '../../api';\r\n\r\nexport default class Category extends Component{\r\n\r\n    state = {\r\n        loading: false, // 列表loading\r\n        categorys: [], // 列表数据\r\n        subCategorys: [], // 二级分类列表\r\n        parentId: '0', // 分类id\r\n        parentName: '', // 分类名称\r\n        showStatus: '0', // 弹出框显示隐藏 0：都隐藏；1：添加；2：更新\r\n    }\r\n\r\n    // 获得列表数据(一级、二级)\r\n    // parentId: 如果没有指定根据状态中的parentId请求，如果指定了根据指定的请求\r\n    getDate = async (parentId) => {\r\n        try {\r\n            // console.log(this.state)\r\n            parentId = parentId || this.state.parentId;\r\n            this.setState({\r\n                loading: true,\r\n            })\r\n            // 发请求\r\n            const res = await reqCategorys(parentId);\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n\r\n            if (res.status ===0) {\r\n                // 取出分类数据；一级、或二级\r\n                const categorys =res.data\r\n                if (parentId === '0') {\r\n                    // console.log('-1-',categorys)\r\n                    this.setState({\r\n                        categorys,\r\n                    })\r\n                } else {\r\n                    // console.log('-2-')\r\n                    this.setState({\r\n                        subCategorys: categorys,\r\n                    })\r\n                }\r\n            } else {\r\n                message.error('获得分类列表失败')\r\n            }\r\n        } catch (e) {\r\n            message.error('使用假数据！')\r\n            const {parentId} = this.state;\r\n            const categorys = [\r\n                {\r\n                    name: \"一级分类10\",\r\n                    parentId: \"0\",\r\n                    __v: 0,\r\n                    _id: \"610a8ba0f32ee70ef0a7c912\",\r\n                },\r\n                {\r\n                    name: \"电脑\",\r\n                    parentId: \"0\",\r\n                    __v: 0,\r\n                    _id: \"610a8bbdf32ee70ef0a7c913\",\r\n                },\r\n            ];\r\n            const subCategorys = [\r\n                {\r\n                    name: \"电脑1\",\r\n                    parentId: \"610a8ba0f32ee70ef0a7c912\",\r\n                    __v: 0,\r\n                    _id: \"610a9791f32ee70ef0a7c914\",\r\n                }\r\n            ];\r\n            if (parentId === '0') {\r\n                this.setState({\r\n                    categorys,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    subCategorys,\r\n                })\r\n            }\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    // 点击二级分类里边的一级分类标题\r\n    showCate = () =>{\r\n        this.setState(\r\n            {\r\n                parentId: '0', // 分类id\r\n                subCategorys: [], // 二级分类列表\r\n                parentName: '', // 分类名称\r\n            }\r\n        )\r\n    }\r\n\r\n    // table列表\r\n    getInitColums = () => {\r\n        this.columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: '',\r\n                width: 300,\r\n                render: (category) =>(\r\n                     <span>\r\n                        <LinkButton onClick={()=>this.cateUpdate(category)}>修改</LinkButton>\r\n                        {/* \r\n                            这种方式，进来会立即执行\r\n                            <LinkButton onClick={this.getSubCate(category)}>查看子分类</LinkButton> \r\n                            这种写，进来不调，点击时候调，但不能传参数\r\n                            <LinkButton onClick={this.getSubCate}>查看子分类</LinkButton> \r\n                            如何将事件回调函数，传递参数：先定义匿名函数，再函数调用处理的函数并传入数据\r\n                        */}\r\n                        {\r\n                            this.state.parentId === '0' ? \r\n                            <LinkButton onClick={()=>this.getSubCate(category)}>查看子分类</LinkButton> : null\r\n                        }\r\n                    </span>\r\n                )\r\n            },\r\n        ];\r\n    }\r\n\r\n    // 点击查看二级分类\r\n    getSubCate = (category) => {\r\n        // 更新状态，此方法为异步\r\n        this.setState({\r\n            parentId: category._id, // 分类id\r\n            parentName: category.name, // 分类名称\r\n        },()=>{\r\n            // console.log(this.state)\r\n            // 在状态更新且重新render()后执行\r\n            // 二级分类列表\r\n            this.getDate();\r\n        })\r\n        // console.log(this.state)\r\n        // this.getDate();\r\n    }\r\n\r\n    // 添加\r\n    cateAdd = () => {\r\n        this.setState({showStatus: '1'})\r\n    }\r\n\r\n    // 更新\r\n    cateUpdate = category => {\r\n        // 保存数据，向子组件传递\r\n        this.cateUpdateDate = category\r\n        this.setState({showStatus: '2'})\r\n        // console.log(category)\r\n    }\r\n\r\n    // 取消\r\n    handleCancel = () => {\r\n        try {\r\n            this.setState({showStatus: '0'})\r\n            // 清除输入数据\r\n            this.form.resetFields()\r\n\r\n            // console.log(this.form, this.cateUpdateDate)\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    // 确定 添加\r\n    handleOk1 = () => {\r\n        try {\r\n            this.form.validateFields(async (err,values)=>{\r\n                if (!err){\r\n                    // 1. 隐藏框\r\n                    this.setState({showStatus: '0'})\r\n\r\n                    // const categoryId = this.cateUpdateDate._id\r\n                    // 函数传参，接受form对象\r\n                    const {categoryName,parentId} = values;\r\n\r\n                    // 清除输入数据\r\n                    this.form.resetFields()\r\n\r\n                    // 2. 发请求\r\n                    const result = await reqAddCategory(categoryName, parentId)\r\n\r\n                    if (result.status === 0) {\r\n                        if(parentId === this.state.parentId) { // 二级分类添加非其他二级分类\r\n                            // 3. 重新显示列表\r\n                            this.getDate()\r\n                        } else if(parentId === '0') { // 二级分类添加一级分类\r\n                            // 3. 重新显示列表\r\n                            // this.setState({parentId: '0'}, () => {\r\n                            //     this.getDate()\r\n                            // })\r\n                            this.getDate('0')\r\n                        }\r\n                    }\r\n                    message.success('添加成功');\r\n                }\r\n            });\r\n        } catch (e) {\r\n            this.setState({showStatus: '0'})\r\n            message.error('接口异常 增删改 不做处理！')\r\n        }\r\n    }\r\n    \r\n    // 确定 更新\r\n    handleOk = () => {\r\n        try {\r\n            this.form.validateFields(async (err,values)=>{\r\n                if (!err){\r\n                    // 1. 隐藏框\r\n                    this.setState({showStatus: '0'})\r\n\r\n                    const categoryId = this.cateUpdateDate._id\r\n                    // 函数传参，接受form对象\r\n                    // const categoryName = this.form.getFieldValue('categoryName')\r\n                    const {categoryName} =values;\r\n\r\n                    // 清除输入数据\r\n                    this.form.resetFields()\r\n\r\n                    // 2. 发请求\r\n                    const result = await reqUpdateCategory({categoryName, categoryId})\r\n\r\n                    if (result.status === 0) {\r\n                        // 3. 重新显示列表\r\n                        this.getDate()\r\n                    }\r\n\r\n                    message.success('更新成功');\r\n                }\r\n            })\r\n        } catch (e) {\r\n            this.setState({showStatus: '0'})\r\n            message.error('接口异常 增删改 不做处理！')\r\n        }\r\n    }\r\n\r\n    // 为第一次render()准备数据\r\n    componentWillMount() {\r\n        this.getInitColums();\r\n    }\r\n\r\n    // 执行异步\r\n    componentDidMount() {\r\n        // 一级分类列表\r\n        this.getDate();\r\n    }\r\n\r\n    render() {\r\n        const {categorys, subCategorys, parentId, loading, parentName} = this.state\r\n\r\n        //  更新-子组件传参\r\n        const {name} = this.cateUpdateDate || {}\r\n\r\n\r\n        // console.log(this.state)\r\n        // console.log(this.props)\r\n\r\n        // 这里的title 可以传 字符串 | dom节点\r\n        const title = parentId === '0' ? '一级分类' : (\r\n            <span>\r\n                <LinkButton onClick={this.showCate}>一级分类</LinkButton>\r\n                <Icon type=\"right\"></Icon>\r\n                {parentName}\r\n            </span>\r\n        )\r\n        const extra = (\r\n            <Button type=\"primary\" onClick={this.cateAdd}>\r\n                <Icon type=\"plus\" />添加\r\n            </Button>\r\n        )\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Card title={title} extra={extra} >\r\n                    <Table \r\n                        bordered\r\n                        rowKey='_id'\r\n                        loading={loading}\r\n                        dataSource={parentId === '0' ? categorys : subCategorys} \r\n                        columns={this.columns} \r\n                        pagination={{defaultPageSize:5,showQuickJumper:true}}\r\n                    />\r\n                </Card>\r\n\r\n                {/* 添加 */}\r\n                <Modal\r\n                    title=\"添加\"\r\n                    visible={this.state.showStatus==='1'}\r\n                    onOk={this.handleOk1}\r\n                    onCancel={this.handleCancel}\r\n                    >\r\n                    <AddForm \r\n                        categorys={categorys} \r\n                        parentId={parentId} \r\n                        setForm ={(form)=>{this.form = form}}\r\n                    />\r\n                </Modal>\r\n                {/* 更新 */}\r\n                <Modal\r\n                    title=\"更新\"\r\n                    visible={this.state.showStatus==='2'}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    >\r\n                    <UpdateForm \r\n                        categoryName={name}\r\n                        setForm ={(form)=>{this.form = form}}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Product extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Role extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class User extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Bar extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Line extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Pie extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { Layout } from 'antd';\r\n\r\nimport memoryUtils from '../../utils/memoryUtils';\r\n\r\nimport LeftNav from '../../components/left-nav';\r\nimport Header from '../../components/header';\r\n\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../chart/bar'\r\nimport Line from '../chart/line'\r\nimport Pie from '../chart/pie'\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\nexport default class Admin extends Component {\r\n  render() {\r\n    const user = memoryUtils.user\r\n    // 当前没有用户\r\n    if (!user || !user._id) {\r\n      // 自动跳转登录\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <Layout style={{height: '100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{margin: 20,backgroundColor: '#fff'}}>\r\n            <Switch>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path='/user' component={User}/>\r\n              <Route path='/chart/bar' component={Bar}/>\r\n              <Route path='/chart/line' component={Line}/>\r\n              <Route path='/chart/pie' component={Pie}/>\r\n              <Redirect to='/home'/>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign: 'center'}}>2021-07-25注册使用</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport {Redirect, BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport Login from './pages/login/login'\nimport Admin from './pages/admin/admin'\n\n/*\n  应用的根组件\n*/\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        {/* 只匹配其中一个 */}\n        <Switch>\n          <Route path='/login' component={Login}></Route>\n          <Route path='/' component={Admin}></Route>\n          <Redirect to='/'/>\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport storageUtils from './utils/storageUtils'\nimport memoryUtils from './utils/memoryUtils'\n\n// 读取local保存的user,保存到内存里\nconst user = storageUtils.getUser()\nmemoryUtils.user = user\n\n// 将App组件标签 渲染到index页面的div上\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}